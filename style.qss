/*
Copyright (c) 2020 Autodesk, Inc

CONFIDENTIAL AND PROPRIETARY

This work is provided "AS IS" and subject to the Shotgun Pipeline Toolkit
Source Code License included in this distribution package. See LICENSE.
By accessing, using, copying or modifying this work you indicate your
agreement to the Shotgun Pipeline Toolkit Source Code License. All rights
not expressly granted therein are reserved by Autodesk, Inc.
*/

/*
Global styles to ensure Toolkit apps opened from SketchBook show the
correct toolkit theme, instead of inheriting SketchBook's styles.

Known remaining style issues:

1. Anywhere that a delegate is used or QWidget.setStyleSheet, this has potential
to bypass our styles set here and styles set programatically in the engine.

2. Any widgets created dynamically, or that cannot be found as a decendant of the
TankDialog widget created by the engine on running the app.

Apps that have issues:
    tk-multi-loader2: in the list view highlight selection and button higlight color
    tk-multi-shotgunpanel: list view menu opened from actions button

Where in the code:
    tk-multi-shotgunpanel > class ListItemWidget
    tk-framework-qtwidgets > class ShotgunMenu
    tk-framework-qtwidgets > class WidgetDelegate
*/

QWidget {
  font-family: Open Sans;
  font-style: Regular;
  font-size: 11px;
  color: palette(text);
  selection-color: white;
  selection-background-color: {{SG_HIGHLIGHT_COLOR}};
}

QLineEdit {
  background-color: palette(base);
}

QScrollBar {
  background-color: palette(midlight);
  border: none;
}

QScrollBar::handle {
  background: palette(light);
}

QMenu {
  background-color: palette(window);
}

QMenu::item {
  background-color: palette(window);
}

QMenu::item::selected {
  background-color: palette(midlight);
}

QMenu::separator {
  background: palette(base);
}

QToolButton::hover {
  background-color: palette(light);
}

/*
NOTE:  We need to modify tk-multi-publish2 app style.qss file,
remove the background-color attribute for #progress_bar, OR if
we set the background-color attribute to palette(base), we do not
need this QProgressBar style here.
*/
QProgressBar {
  background-color: palette(base);
}

QMessageBox {
  background-color: palette(window);
}

QDialog {
  background: palette(window);
}

QFileDialog QListView{
  background-color: palette(base);
}

QFileDialog QTreeView {
  background-color: palette(base);
}
